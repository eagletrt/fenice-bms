
.. _program_listing_file_mainboard_Inc_fenice_config.h:

Program Listing for File fenice_config.h
========================================

|exhale_lsh| :ref:`Return to documentation for file <file_mainboard_Inc_fenice_config.h>` (``mainboard/Inc/fenice_config.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef FENICE_CONFIG_H
   #define FENICE_CONFIG_H
   
   #include <inttypes.h>
   
   //===========================================================================
   //=================================== General ===============================
   //===========================================================================
   
   #define htim_Err htim2
   
   #define CAN_MAX_PAYLOAD_LENGTH 8
   
   //===========================================================================
   //=================================== LTC6813 ===============================
   //===========================================================================
   
   // Set to 1 to emulate the LTC daisy chain
   #define LTC6813_EMU 0
   
   #define LTC6813_COUNT 6
   
   #define LTC6813_CELL_COUNT 18
   
   #define LTC6813_REG_COUNT 6
   
   #define LTC6813_REG_CELL_COUNT 3
   
   #define LTC6813_TEMP_ADDRESS 69
   
   //===========================================================================
   //================================= Temperature =============================
   //===========================================================================
   
   #define TEMP_READ_INTERVAL 100
   
   #define TEMP_SAMPLE_COUNT 4
   
   #define TEMP_BUS_COUNT 1
   
   #define TEMP_STRIPS_PER_BUS 1
   
   #define TEMP_SENSORS_PER_STRIP 6
   
   #define TEMP_SENSOR_COUNT (TEMP_BUS_COUNT * TEMP_STRIPS_PER_BUS * TEMP_SENSORS_PER_STRIP)
   
   static const uint8_t TEMP_SENSOR_ADDRESS_CODING[TEMP_SENSORS_PER_STRIP] = {
       000, 100, 010, 110, 020, 120};
   
   //===========================================================================
   //================================ Pack Settings ============================
   //===========================================================================
   
   #define PACK_CELL_COUNT (LTC6813_COUNT * LTC6813_CELL_COUNT)
   
   #define PACK_TEMP_COUNT (TEMP_SENSOR_COUNT * LTC6813_COUNT)
   
   #define PACK_MAX_CURRENT 2000
   
   #define CELL_WARN_VOLTAGE 28000
   #define CELL_MIN_VOLTAGE 25000
   #define CELL_MAX_VOLTAGE 42250
   
   #define CELL_MAX_TEMPERATURE 6000
   
   // @section Balancing
   
   #define BAL_MAX_VOLTAGE_THRESHOLD 100
   
   #define BAL_CYCLE_LENGTH 120000
   
   #define PRECHARGE_TIMEOUT 10000
   #define PRECHARGE_VOLTAGE_THRESHOLD 0.95
   
   typedef uint16_t voltage_t;
   typedef uint8_t temperature_t;
   typedef int16_t current_t;
   
   enum {
       FEEDBACK_VREF_POS,
       FEEDBACK_FROM_TSMS_POS,
       FEEDBACK_TO_TSMS_POS,
       FEEDBACK_FROM_SHUTDOWN_POS,
       FEEDBACK_LATCH_IMD_POS,
       FEEDBACK_LATCH_BMS_POS,
       FEEDBACK_IMD_FAULT_POS,
       FEEDBACK_BMS_FAULT_POS,
       FEEDBACK_TSAL_HV_POS,
       FEEDBACK_AIR_POSITIVE_POS,
       FEEDBACK_AIR_NEGATIVE_POS,
       FEEDBACK_PC_END_POS,
       FEEDBACK_RELAY_LV_POS,
       FEEDBACK_IMD_SHUTDOWN_POS,
       FEEDBACK_BMS_SHUTDOWN_POS,
       FEEDBACK_TS_ON_POS,
   
       //do not move FEEDBACK_N
       FEEDBACK_N,
   };
   
   #define FEEDBACK_NULL 0
   #define FEEDBACK_VREF ((feedback_t)1 << FEEDBACK_VREF_POS)
   #define FEEDBACK_FROM_TSMS ((feedback_t)1 << FEEDBACK_FROM_TSMS_POS)
   #define FEEDBACK_TO_TSMS ((feedback_t)1 << FEEDBACK_TO_TSMS_POS)
   #define FEEDBACK_FROM_SHUTDOWN ((feedback_t)1 << FEEDBACK_FROM_SHUTDOWN_POS)
   #define FEEDBACK_LATCH_IMD ((feedback_t)1 << FEEDBACK_LATCH_IMD_POS)
   #define FEEDBACK_LATCH_BMS ((feedback_t)1 << FEEDBACK_LATCH_BMS_POS)
   #define FEEDBACK_IMD_FAULT ((feedback_t)1 << FEEDBACK_IMD_FAULT_POS)
   #define FEEDBACK_BMS_FAULT ((feedback_t)1 << FEEDBACK_BMS_FAULT_POS)
   #define FEEDBACK_TSAL_HV ((feedback_t)1 << FEEDBACK_TSAL_HV_POS)
   #define FEEDBACK_AIR_POSITIVE ((feedback_t)1 << FEEDBACK_AIR_POSITIVE_POS)
   #define FEEDBACK_AIR_NEGATIVE ((feedback_t)1 << FEEDBACK_AIR_NEGATIVE_POS)
   #define FEEDBACK_PC_END ((feedback_t)1 << FEEDBACK_PC_END_POS)
   #define FEEDBACK_RELAY_LV ((feedback_t)1 << FEEDBACK_RELAY_LV_POS)
   #define FEEDBACK_IMD_SHUTDOWN ((feedback_t)1 << FEEDBACK_IMD_SHUTDOWN_POS)
   #define FEEDBACK_BMS_SHUTDOWN ((feedback_t)1 << FEEDBACK_BMS_SHUTDOWN_POS)
   #define FEEDBACK_TS_ON ((feedback_t)1 << FEEDBACK_TS_ON_POS)
   #define FEEDBACK_ALL (feedback_t)(((feedback_t)1 << FEEDBACK_N) - 1)
   
   //===========================================================================
   //=========================== S160 current transducer =======================
   //===========================================================================
   
   // 0A voltage level
   #define S160_OFFSET (3.33 / 2)
   
   // Sensitivity of the 50A sensor
   #define S160_50A_SENS 6.67
   
   //Sensitivity of the 300A sensor
   #define S160_300A_SENS 40
   
   //===========================================================================
   //=============================== SI8900 Settings ===========================
   //===========================================================================
   
   #define SI8900_INIT_TIMEOUT 1000
   
   #define SI8900_TIMEOUT 5
   
   #define SI8900_VREF 3.33
   
   /*
    * If the cli should echo the input
   */
   #define CLI_ECHO 1
   
   #endif /* FENICE_CONFIG_H_ */
