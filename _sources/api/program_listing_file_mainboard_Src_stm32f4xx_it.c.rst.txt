
.. _program_listing_file_mainboard_Src_stm32f4xx_it.c:

Program Listing for File stm32f4xx_it.c
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_mainboard_Src_stm32f4xx_it.c>` (``mainboard/Src/stm32f4xx_it.c``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /* USER CODE BEGIN Header */
   /* USER CODE END Header */
   
   /* Includes ------------------------------------------------------------------*/
   #include "main.h"
   #include "stm32f4xx_it.h"
   /* Private includes ----------------------------------------------------------*/
   /* USER CODE BEGIN Includes */
   /* USER CODE END Includes */
   
   /* Private typedef -----------------------------------------------------------*/
   /* USER CODE BEGIN TD */
   
   /* USER CODE END TD */
   
   /* Private define ------------------------------------------------------------*/
   /* USER CODE BEGIN PD */
   
   /* USER CODE END PD */
   
   /* Private macro -------------------------------------------------------------*/
   /* USER CODE BEGIN PM */
   
   /* USER CODE END PM */
   
   /* Private variables ---------------------------------------------------------*/
   /* USER CODE BEGIN PV */
   
   /* USER CODE END PV */
   
   /* Private function prototypes -----------------------------------------------*/
   /* USER CODE BEGIN PFP */
   
   /* USER CODE END PFP */
   
   /* Private user code ---------------------------------------------------------*/
   /* USER CODE BEGIN 0 */
   
   /* USER CODE END 0 */
   
   /* External variables --------------------------------------------------------*/
   extern CAN_HandleTypeDef hcan1;
   extern CAN_HandleTypeDef hcan2;
   extern TIM_HandleTypeDef htim2;
   extern TIM_HandleTypeDef htim3;
   extern TIM_HandleTypeDef htim4;
   extern UART_HandleTypeDef huart1;
   extern UART_HandleTypeDef huart3;
   /* USER CODE BEGIN EV */
   
   /* USER CODE END EV */
   
   /******************************************************************************/
   /*           Cortex-M4 Processor Interruption and Exception Handlers          */
   /******************************************************************************/
   void NMI_Handler(void)
   {
     /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
   
     /* USER CODE END NonMaskableInt_IRQn 0 */
     /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
     while (1)
     {
     }
     /* USER CODE END NonMaskableInt_IRQn 1 */
   }
   
   void HardFault_Handler(void)
   {
     /* USER CODE BEGIN HardFault_IRQn 0 */
   
     /* USER CODE END HardFault_IRQn 0 */
     while (1)
     {
       /* USER CODE BEGIN W1_HardFault_IRQn 0 */
       /* USER CODE END W1_HardFault_IRQn 0 */
     }
   }
   
   void MemManage_Handler(void)
   {
     /* USER CODE BEGIN MemoryManagement_IRQn 0 */
   
     /* USER CODE END MemoryManagement_IRQn 0 */
     while (1)
     {
       /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
       /* USER CODE END W1_MemoryManagement_IRQn 0 */
     }
   }
   
   void BusFault_Handler(void)
   {
     /* USER CODE BEGIN BusFault_IRQn 0 */
   
     /* USER CODE END BusFault_IRQn 0 */
     while (1)
     {
       /* USER CODE BEGIN W1_BusFault_IRQn 0 */
       /* USER CODE END W1_BusFault_IRQn 0 */
     }
   }
   
   void UsageFault_Handler(void)
   {
     /* USER CODE BEGIN UsageFault_IRQn 0 */
   
     /* USER CODE END UsageFault_IRQn 0 */
     while (1)
     {
       /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
       /* USER CODE END W1_UsageFault_IRQn 0 */
     }
   }
   
   void SVC_Handler(void)
   {
     /* USER CODE BEGIN SVCall_IRQn 0 */
   
     /* USER CODE END SVCall_IRQn 0 */
     /* USER CODE BEGIN SVCall_IRQn 1 */
   
     /* USER CODE END SVCall_IRQn 1 */
   }
   
   void DebugMon_Handler(void)
   {
     /* USER CODE BEGIN DebugMonitor_IRQn 0 */
   
     /* USER CODE END DebugMonitor_IRQn 0 */
     /* USER CODE BEGIN DebugMonitor_IRQn 1 */
   
     /* USER CODE END DebugMonitor_IRQn 1 */
   }
   
   void PendSV_Handler(void)
   {
     /* USER CODE BEGIN PendSV_IRQn 0 */
   
     /* USER CODE END PendSV_IRQn 0 */
     /* USER CODE BEGIN PendSV_IRQn 1 */
   
     /* USER CODE END PendSV_IRQn 1 */
   }
   
   void SysTick_Handler(void)
   {
     /* USER CODE BEGIN SysTick_IRQn 0 */
   
     /* USER CODE END SysTick_IRQn 0 */
     HAL_IncTick();
     /* USER CODE BEGIN SysTick_IRQn 1 */
   
     /* USER CODE END SysTick_IRQn 1 */
   }
   
   /******************************************************************************/
   /* STM32F4xx Peripheral Interrupt Handlers                                    */
   /* Add here the Interrupt Handlers for the used peripherals.                  */
   /* For the available peripheral interrupt handler names,                      */
   /* please refer to the startup file (startup_stm32f4xx.s).                    */
   /******************************************************************************/
   
   void CAN1_RX0_IRQHandler(void)
   {
     /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
   
     /* USER CODE END CAN1_RX0_IRQn 0 */
     HAL_CAN_IRQHandler(&hcan1);
     /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
   
     /* USER CODE END CAN1_RX0_IRQn 1 */
   }
   
   void CAN1_RX1_IRQHandler(void)
   {
     /* USER CODE BEGIN CAN1_RX1_IRQn 0 */
   
     /* USER CODE END CAN1_RX1_IRQn 0 */
     HAL_CAN_IRQHandler(&hcan1);
     /* USER CODE BEGIN CAN1_RX1_IRQn 1 */
   
     /* USER CODE END CAN1_RX1_IRQn 1 */
   }
   
   void CAN1_SCE_IRQHandler(void)
   {
     /* USER CODE BEGIN CAN1_SCE_IRQn 0 */
   
     /* USER CODE END CAN1_SCE_IRQn 0 */
     HAL_CAN_IRQHandler(&hcan1);
     /* USER CODE BEGIN CAN1_SCE_IRQn 1 */
   
     /* USER CODE END CAN1_SCE_IRQn 1 */
   }
   
   void TIM2_IRQHandler(void)
   {
     /* USER CODE BEGIN TIM2_IRQn 0 */
   
     /* USER CODE END TIM2_IRQn 0 */
     HAL_TIM_IRQHandler(&htim2);
     /* USER CODE BEGIN TIM2_IRQn 1 */
   
     /* USER CODE END TIM2_IRQn 1 */
   }
   
   void TIM3_IRQHandler(void)
   {
     /* USER CODE BEGIN TIM3_IRQn 0 */
   
     /* USER CODE END TIM3_IRQn 0 */
     HAL_TIM_IRQHandler(&htim3);
     /* USER CODE BEGIN TIM3_IRQn 1 */
   
     /* USER CODE END TIM3_IRQn 1 */
   }
   
   void TIM4_IRQHandler(void)
   {
     /* USER CODE BEGIN TIM4_IRQn 0 */
   
     /* USER CODE END TIM4_IRQn 0 */
     HAL_TIM_IRQHandler(&htim4);
     /* USER CODE BEGIN TIM4_IRQn 1 */
   
     /* USER CODE END TIM4_IRQn 1 */
   }
   
   void USART1_IRQHandler(void)
   {
     /* USER CODE BEGIN USART1_IRQn 0 */
   
     /* USER CODE END USART1_IRQn 0 */
     HAL_UART_IRQHandler(&huart1);
     /* USER CODE BEGIN USART1_IRQn 1 */
   
     /* USER CODE END USART1_IRQn 1 */
   }
   
   void USART3_IRQHandler(void)
   {
     /* USER CODE BEGIN USART3_IRQn 0 */
   
     /* USER CODE END USART3_IRQn 0 */
     HAL_UART_IRQHandler(&huart3);
     /* USER CODE BEGIN USART3_IRQn 1 */
   
     /* USER CODE END USART3_IRQn 1 */
   }
   
   void CAN2_RX0_IRQHandler(void)
   {
     /* USER CODE BEGIN CAN2_RX0_IRQn 0 */
   
     /* USER CODE END CAN2_RX0_IRQn 0 */
     HAL_CAN_IRQHandler(&hcan2);
     /* USER CODE BEGIN CAN2_RX0_IRQn 1 */
   
     /* USER CODE END CAN2_RX0_IRQn 1 */
   }
   
   void CAN2_RX1_IRQHandler(void)
   {
     /* USER CODE BEGIN CAN2_RX1_IRQn 0 */
   
     /* USER CODE END CAN2_RX1_IRQn 0 */
     HAL_CAN_IRQHandler(&hcan2);
     /* USER CODE BEGIN CAN2_RX1_IRQn 1 */
   
     /* USER CODE END CAN2_RX1_IRQn 1 */
   }
   
   void CAN2_SCE_IRQHandler(void)
   {
     /* USER CODE BEGIN CAN2_SCE_IRQn 0 */
   
     /* USER CODE END CAN2_SCE_IRQn 0 */
     HAL_CAN_IRQHandler(&hcan2);
     /* USER CODE BEGIN CAN2_SCE_IRQn 1 */
   
     /* USER CODE END CAN2_SCE_IRQn 1 */
   }
   
   /* USER CODE BEGIN 1 */
   
   /* USER CODE END 1 */
   /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
